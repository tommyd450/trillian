kind: Pipeline
apiVersion: tekton.dev/v1beta1
metadata:
  name: Snapshot-Query
spec:
  params:
    - name: SNAPSHOT
      default: '{"components": [{"name":"test-app", "containerImage": "quay.io/example/repo:latest"}]}'
      type: string
    - name: git_repo
      type: string
    - name: revision
      type: string
    - name: github_secret_name
      type: string
    - name: github_secret_token
      type: string
    - name: releaseVersion
      type: string
  workspaces:
    - name: release-workspace
  tasks:
    - name: Snapshot Stitcher
      description: Placeholder task that prints the Snapshot and outputs standard TEST_OUTPUT
      params:
        - name: SNAPSHOT
          value: "$(params.SNAPSHOT)"
        - name: LABEL
          value: "$(context.pipelineRun.name)"
        - name: GIT_REPO
          value: "$(params.git_repo)"
        - name: GIT_SECRET_NAME
          value: "$(params.git_secret_name)"
        - name: GIT_SECRET_TOKEN
          value: "$(params.git_secret_token)"
        - name: RELEASEVERSION
          value: "$(params.releaseVersion)"
      taskSpec:
        params:
          - name: SNAPSHOT
            value: $(params.SNAPSHOT)
          - name: LABEL
            value: $(context.pipelineRun.name)
          - name: GIT_REPO
            value: $(params.git_repo)
          - name: GIT_SECRET_NAME
            value: $(params.git_secret_name)
          - name: GIT_SECRET_TOKEN
            value: $(params.git_secret_token)
          - name: RELEASEVERSION
            value: $(params.releaseVersion)
        steps:
        - image: quay.io/hacbs-release/cloud-builders-kubectl@sha256:8ab94be8b2b4f3d117f02d868b39540fddd225447abf4014f7ba4765cb39f753"
          env:
            - name: access-token
              valueFrom:
                secretKeyREf:
                  name: $(params.GIT_SECRET_NAME)
          script: |
            dnf -y install jq
            dnf -y install gh
            dnf -y install sed

            git config --global user.email "tdalton@redhat.com"
            git config --global user.name "Data"
            git clone https://ret:${GH_TOKEN}@github.com/tommyd450/trillian.git
            cd release
            git remote -v
            git fetch origin
            git checkout test
            echo "Updated" >> release.yaml
            echo "2"
            ls -a
            git remote -v
            git add release.yaml

            git commit -m "Updating"

            git status

            git push origin trilltest:trilltest
            